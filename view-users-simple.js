const { PrismaClient } = require('@prisma/client');

const prisma = new PrismaClient();

async function viewUsers() {
  try {
    console.log('üîç –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö:\n');

    const users = await prisma.user.findMany({
      select: {
        id: true,
        email: true,
        firstName: true,
        lastName: true,
        firebaseUid: true,
        createdAt: true
      }
    });

    if (users.length === 0) {
      console.log('‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã');
    } else {
      users.forEach((user, index) => {
        console.log(`üë§ ${index + 1}. ${user.email}`);
        console.log(`   ID: ${user.id}`);
        console.log(`   –ò–º—è: ${user.firstName || '–ù–µ —É–∫–∞–∑–∞–Ω–æ'}`);
        console.log(`   –§–∞–º–∏–ª–∏—è: ${user.lastName || '–ù–µ —É–∫–∞–∑–∞–Ω–æ'}`);
        console.log(`   Firebase UID: ${user.firebaseUid || '–ù–µ –ø—Ä–∏–≤—è–∑–∞–Ω'}`);
        console.log(`   –°–æ–∑–¥–∞–Ω: ${user.createdAt.toLocaleString('ru-RU')}`);
        console.log('');
      });
    }
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞:', error.message);
  } finally {
    await prisma.$disconnect();
  }
}

viewUsers();
