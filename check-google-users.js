const { PrismaClient } = require('@prisma/client');

const prisma = new PrismaClient();

async function checkGoogleUsers() {
  try {
    console.log('üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º Google –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö...\n');

    // –ü–æ–¥—Å—á–∏—Ç—ã–≤–∞–µ–º –æ–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    const userCount = await prisma.user.count();
    console.log(`üìä –í—Å–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –≤ –±–∞–∑–µ: ${userCount}\n`);

    // –ü–æ–¥—Å—á–∏—Ç—ã–≤–∞–µ–º Google –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    const googleUserCount = await prisma.user.count({
      where: {
        googleId: { not: null }
      }
    });
    console.log(`üîë Google –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: ${googleUserCount}\n`);

    // –ü–æ–¥—Å—á–∏—Ç—ã–≤–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —Å Firebase UID
    const firebaseUserCount = await prisma.user.count({
      where: {
        firebaseUid: { not: null }
      }
    });
    console.log(`üî• –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —Å Firebase UID: ${firebaseUserCount}\n`);

    // –ü–æ–¥—Å—á–∏—Ç—ã–≤–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —Å –ø–∞—Ä–æ–ª–µ–º
    const passwordUserCount = await prisma.user.count({
      where: {
        password: { not: null }
      }
    });
    console.log(`üîê –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —Å –ø–∞—Ä–æ–ª–µ–º: ${passwordUserCount}\n`);

    if (userCount > 0) {
      // –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —Å –¥–µ—Ç–∞–ª—å–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π
      const users = await prisma.user.findMany({
        select: {
          id: true,
          email: true,
          firstName: true,
          lastName: true,
          googleId: true,
          firebaseUid: true,
          password: true,
          avatar: true,
          isActive: true,
          createdAt: true
        },
        orderBy: {
          createdAt: 'desc'
        }
      });

      console.log('üìã –î–µ—Ç–∞–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è—Ö:\n');

      users.forEach((user, index) => {
        const userType = [];
        if (user.googleId) userType.push('Google');
        if (user.firebaseUid) userType.push('Firebase');
        if (user.password) userType.push('Password');

        console.log(`üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ${index + 1}:`);
        console.log(`   ID: ${user.id}`);
        console.log(`   Email: ${user.email}`);
        console.log(`   –ò–º—è: ${user.firstName || '–ù–µ —É–∫–∞–∑–∞–Ω–æ'}`);
        console.log(`   –§–∞–º–∏–ª–∏—è: ${user.lastName || '–ù–µ —É–∫–∞–∑–∞–Ω–æ'}`);
        console.log(`   –¢–∏–ø: ${userType.join(' + ') || '–ù–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω'}`);
        console.log(`   Google ID: ${user.googleId || '–ù–µ –ø—Ä–∏–≤—è–∑–∞–Ω'}`);
        console.log(`   Firebase UID: ${user.firebaseUid || '–ù–µ –ø—Ä–∏–≤—è–∑–∞–Ω'}`);
        console.log(`   –ê–≤–∞—Ç–∞—Ä: ${user.avatar ? '–ï—Å—Ç—å' : '–ù–µ—Ç'}`);
        console.log(`   –ê–∫—Ç–∏–≤–µ–Ω: ${user.isActive ? '–î–∞' : '–ù–µ—Ç'}`);
        console.log(`   –°–æ–∑–¥–∞–Ω: ${user.createdAt.toLocaleString('ru-RU')}`);
        console.log('');
      });

      // –ê–Ω–∞–ª–∏–∑ —Å–≤—è–∑–µ–π
      console.log('üîó –ê–Ω–∞–ª–∏–∑ —Å–≤—è–∑–µ–π:\n');

      const googleWithFirebase = users.filter(u => u.googleId && u.firebaseUid).length;
      const googleWithoutFirebase = users.filter(u => u.googleId && !u.firebaseUid).length;
      const passwordWithFirebase = users.filter(u => u.password && u.firebaseUid).length;
      const passwordWithoutFirebase = users.filter(u => u.password && !u.firebaseUid).length;

      console.log(`‚úÖ Google + Firebase: ${googleWithFirebase}`);
      console.log(`‚ùå Google –±–µ–∑ Firebase: ${googleWithoutFirebase}`);
      console.log(`‚úÖ Password + Firebase: ${passwordWithFirebase}`);
      console.log(`‚ùå Password –±–µ–∑ Firebase: ${passwordWithoutFirebase}`);

      if (googleWithoutFirebase > 0) {
        console.log(`\n‚ö†Ô∏è  –í–ù–ò–ú–ê–ù–ò–ï: ${googleWithoutFirebase} Google –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –Ω–µ –∏–º–µ—é—Ç Firebase UID!`);
        console.log('   –û–Ω–∏ –ø–æ–ª—É—á–∞—Ç Firebase UID –ø—Ä–∏ —Å–ª–µ–¥—É—é—â–µ–º –≤—Ö–æ–¥–µ —á–µ—Ä–µ–∑ Google.');
      }

    } else {
      console.log('‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã');
    }

  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞:', error.message);
  } finally {
    await prisma.$disconnect();
  }
}

checkGoogleUsers();
