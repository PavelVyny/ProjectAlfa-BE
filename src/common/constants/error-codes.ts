/**
 * Centralized Error Codes
 *
 * This file contains all error codes used throughout the application
 * to ensure consistency and avoid hardcoding strings.
 */

// Authentication & Authorization Error Codes
export const AUTH_ERROR_CODES = {
  // General auth errors
  UNAUTHORIZED: 'UNAUTHORIZED',
  FORBIDDEN: 'FORBIDDEN',
  INVALID_CREDENTIALS: 'INVALID_CREDENTIALS',

  // Token related errors
  INVALID_TOKEN: 'INVALID_TOKEN',
  EXPIRED_TOKEN: 'EXPIRED_TOKEN',
  INVALID_REFRESH_TOKEN: 'INVALID_REFRESH_TOKEN',
  EXPIRED_REFRESH_TOKEN: 'EXPIRED_REFRESH_TOKEN',
  TOKEN_REFRESH_FAILED: 'TOKEN_REFRESH_FAILED',

  // User related errors
  USER_NOT_FOUND: 'USER_NOT_FOUND',
  USER_ALREADY_EXISTS: 'USER_ALREADY_EXISTS',
  USER_INACTIVE: 'USER_INACTIVE',

  // Google OAuth errors
  GOOGLE_AUTH_FAILED: 'GOOGLE_AUTH_FAILED',
  GOOGLE_TOKEN_INVALID: 'GOOGLE_TOKEN_INVALID',
} as const;

// Validation Error Codes
export const VALIDATION_ERROR_CODES = {
  VALIDATION_ERROR: 'VALIDATION_ERROR',
  INVALID_EMAIL: 'INVALID_EMAIL',
  INVALID_PASSWORD: 'INVALID_PASSWORD',
  PASSWORD_TOO_SHORT: 'PASSWORD_TOO_SHORT',
  REQUIRED_FIELD_MISSING: 'REQUIRED_FIELD_MISSING',
  INVALID_FORMAT: 'INVALID_FORMAT',
} as const;

// HTTP Error Codes
export const HTTP_ERROR_CODES = {
  BAD_REQUEST: 'BAD_REQUEST',
  UNAUTHORIZED: 'UNAUTHORIZED',
  FORBIDDEN: 'FORBIDDEN',
  NOT_FOUND: 'NOT_FOUND',
  CONFLICT: 'CONFLICT',
  UNPROCESSABLE_ENTITY: 'UNPROCESSABLE_ENTITY',
  TOO_MANY_REQUESTS: 'TOO_MANY_REQUESTS',
  INTERNAL_SERVER_ERROR: 'INTERNAL_SERVER_ERROR',
  BAD_GATEWAY: 'BAD_GATEWAY',
  SERVICE_UNAVAILABLE: 'SERVICE_UNAVAILABLE',
} as const;

// Database Error Codes
export const DATABASE_ERROR_CODES = {
  CONNECTION_ERROR: 'DATABASE_CONNECTION_ERROR',
  QUERY_ERROR: 'DATABASE_QUERY_ERROR',
  CONSTRAINT_VIOLATION: 'DATABASE_CONSTRAINT_VIOLATION',
  DUPLICATE_ENTRY: 'DATABASE_DUPLICATE_ENTRY',
  TRANSACTION_FAILED: 'DATABASE_TRANSACTION_FAILED',
} as const;

// Business Logic Error Codes
export const BUSINESS_ERROR_CODES = {
  OPERATION_NOT_ALLOWED: 'OPERATION_NOT_ALLOWED',
  RESOURCE_LOCKED: 'RESOURCE_LOCKED',
  QUOTA_EXCEEDED: 'QUOTA_EXCEEDED',
  DEPENDENCY_FAILED: 'DEPENDENCY_FAILED',
} as const;

// Combined error codes for easy access
export const ERROR_CODES = {
  ...AUTH_ERROR_CODES,
  ...VALIDATION_ERROR_CODES,
  ...HTTP_ERROR_CODES,
  ...DATABASE_ERROR_CODES,
  ...BUSINESS_ERROR_CODES,
} as const;

// Type for all error codes
export type ErrorCode = (typeof ERROR_CODES)[keyof typeof ERROR_CODES];

// Helper function to check if a code is valid
export function isValidErrorCode(code: string): code is ErrorCode {
  return Object.values(ERROR_CODES).includes(code as ErrorCode);
}

// Error code to HTTP status mapping
export const ERROR_CODE_TO_HTTP_STATUS: Record<string, number> = {
  // 400 Bad Request
  [ERROR_CODES.BAD_REQUEST]: 400,
  [ERROR_CODES.VALIDATION_ERROR]: 400,
  [ERROR_CODES.INVALID_EMAIL]: 400,
  [ERROR_CODES.INVALID_PASSWORD]: 400,
  [ERROR_CODES.PASSWORD_TOO_SHORT]: 400,
  [ERROR_CODES.REQUIRED_FIELD_MISSING]: 400,
  [ERROR_CODES.INVALID_FORMAT]: 400,

  // 401 Unauthorized
  [ERROR_CODES.UNAUTHORIZED]: 401,
  [ERROR_CODES.INVALID_CREDENTIALS]: 401,
  [ERROR_CODES.INVALID_TOKEN]: 401,
  [ERROR_CODES.EXPIRED_TOKEN]: 401,
  [ERROR_CODES.INVALID_REFRESH_TOKEN]: 401,
  [ERROR_CODES.EXPIRED_REFRESH_TOKEN]: 401,
  [ERROR_CODES.TOKEN_REFRESH_FAILED]: 401,
  [ERROR_CODES.GOOGLE_AUTH_FAILED]: 401,
  [ERROR_CODES.GOOGLE_TOKEN_INVALID]: 401,

  // 403 Forbidden
  [ERROR_CODES.FORBIDDEN]: 403,
  [ERROR_CODES.USER_INACTIVE]: 403,
  [ERROR_CODES.OPERATION_NOT_ALLOWED]: 403,

  // 404 Not Found
  [ERROR_CODES.NOT_FOUND]: 404,
  [ERROR_CODES.USER_NOT_FOUND]: 404,

  // 409 Conflict
  [ERROR_CODES.CONFLICT]: 409,
  [ERROR_CODES.USER_ALREADY_EXISTS]: 409,
  [ERROR_CODES.DUPLICATE_ENTRY]: 409,
  [ERROR_CODES.RESOURCE_LOCKED]: 409,

  // 422 Unprocessable Entity
  [ERROR_CODES.UNPROCESSABLE_ENTITY]: 422,
  [ERROR_CODES.CONSTRAINT_VIOLATION]: 422,

  // 429 Too Many Requests
  [ERROR_CODES.TOO_MANY_REQUESTS]: 429,
  [ERROR_CODES.QUOTA_EXCEEDED]: 429,

  // 500 Internal Server Error
  [ERROR_CODES.INTERNAL_SERVER_ERROR]: 500,
  [ERROR_CODES.CONNECTION_ERROR]: 500,
  [ERROR_CODES.QUERY_ERROR]: 500,
  [ERROR_CODES.TRANSACTION_FAILED]: 500,
  [ERROR_CODES.DEPENDENCY_FAILED]: 500,

  // 502 Bad Gateway
  [ERROR_CODES.BAD_GATEWAY]: 502,

  // 503 Service Unavailable
  [ERROR_CODES.SERVICE_UNAVAILABLE]: 503,
} as const;
